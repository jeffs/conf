theme = 'ayu_dark'

# I use the mouse for Wezterm, and Helix gets in the way by default, like by
# stealing Command+click (which I use to drag Wezterm windows). Wezterm
# automatically translates scroll events to move the cursor up or down several
# lines at a time when Helix is active, which is nice. Selective remapping of
# mouse gestures in Helix is pending:
# <https://github.com/helix-editor/helix/pull/9469>
editor.mouse = false

# [Recommended settings](https://docs.helix-editor.com/editor.html):
# Show warnings and errors on the cursorline inline.
editor.end-of-line-diagnostics = "hint"
editor.inline-diagnostics.cursor-line = "warning"

# Remove "line-numbers" to toggle them.
# editor.gutters = ["diff", "diagnostics", "line-numbers", "spacer"]

[editor.soft-wrap]
enable = true
# Indenting wrapped lines eases visual parsing of Markdown lists. I haven't
# figured out how to set language-specific wrap indicators in Helix yet.
wrap-indicator = '  â†ª '

# Show the tab bar when multiple buffers are open.
# bufferline = "multiple"

[editor.cursor-shape]
insert = 'bar'
normal = 'block'
select = 'underline'

[keys.insert]
'C-e' = ['normal_mode', ':write']
'C-t' = ['normal_mode', ':write']

[keys.normal]
'{' = 'goto_prev_paragraph'
'}' = 'goto_next_paragraph'
C-e = 'scroll_down'
C-j = ':pipe-to tmux-send'
C-r = ':reload-all'
C-t = ':write'
C-y = 'scroll_up'
g = { q = ':reflow' }
left = ':buffer-previous'
right = ':buffer-next'

';' = 'command_mode'
':' = 'collapse_selection'

[keys.normal.C-f]
c = ':buffer-close'
d = ['save_selection', ":append-output echo ')'", 'jump_backward', ":insert-output echo 'dbg!('", 'jump_forward', 'jump_backward']
i = ':toggle lsp.display-inlay-hints'
n = ':toggle soft-wrap.enable'
q = ':quit'
w = ':write'
z = ':write-quit'
C-f = 'page_down'

# Running a sequence of :set or :toggle commands is currently broken. See:
# <https://github.com/helix-editor/helix/issues/13187>
#
# So, neither of these works:
# e = [":toggle end-of-line-diagnostics disable", ":toggle inline-diagnostics.cursor-line disable"]
# e = "@<C-f>1<C-f>2"
1 = ":toggle end-of-line-diagnostics disable"
2 = ":toggle inline-diagnostics.cursor-line disable"

[keys.select.C-f]
c = ':buffer-close'
d = ['save_selection', ":append-output echo ')'", 'jump_backward', ":insert-output echo 'dbg!('", 'jump_forward', 'jump_backward']
i = ':toggle lsp.display-inlay-hints'
n = ':toggle soft-wrap.enable'
q = ':quit'
w = ':write'
z = ':write-quit'
C-f = 'page_down'

[keys.select]
';' = 'command_mode'
':' = 'collapse_selection'
'{' = 'goto_prev_paragraph'
'}' = 'goto_next_paragraph'
